{% extends 'base.html.twig' %}

{% block title %}Supprimer un montant{% endblock %}

{% block body %}
    <header class="justify-content-start align-items-center">
        <a href="{{ path('app_home') }}" class="close-btn link"><i class="fa-solid fa-xmark"></i></a>
        <h1>Supprimer un montant</h1>
    </header>
    <main>
        <div class="board">
            {% include 'view/elements/_flashes.html.twig' %}

            {% if cryptos is not empty %}
            <form method="POST" action="{{ path('app_delete') }}" class="" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette valeur ?');" >
                <div>
                    <div class="form-row">
                        <div class="form-input">
                            <i class="fa-solid fa-magnifying-glass"></i>
                            <select id="crypto" class="form-select" name="crypto" required>
                                <option value="">Selectionnez une crypto</option>
                                {% for crypto in cryptos %}
                                    {% if crypto.totalQuantity != 0 %}
                                        <option id={{crypto.symbol}} value="{{crypto.symbol}}" data-price="{{crypto.unitValueNow}}" data-quantity="{{crypto.totalQuantity}}" >{{crypto.symbol}} -<span>{{crypto.title}}</span> <span>( ≃{{crypto.unitValueNow|round(2,'ceil')}} €)</span></option>
                                    {% endif%}
                                {% endfor %}
                            </select>
                        </div>
                        <span class="form-error error-select"></span>
                    </div>
                    <div class="form-row">
                        <span>Quantité possédée : <b id="actual-quantity"></b></span>
                        <div class="form-input">
                            <i class="fa-solid fa-coins"></i>
                            <input type="text" id="quantity" class="input-group" placeholder="Vente en quantité" name="quantity" required>
                        </div>
                        <span class="form-error error-quantity"></span>
                    </div>
                    <div class="form-row">
                        <span>Valeur possédée : <b id="actual-value"></b></span>
                        <div class="form-input">
                            <i class="fa-solid fa-euro-sign"></i>
                            <input type="text" id="price" class="input-group" placeholder="Vente en euros" name="value" required>
                        </div>
                        <span class="form-error error-value"></span>
                    </div>
                </div>
                <input id="hidden" type="hidden" name="unitPrice">
                <button class="btn btn-main" type="submit">Supprimer</button>
            </form>
            {% else %}
                <div class="transaction_row"  >
                    <span class="noCrypto">Pas de Cryptos</span>
                </div>
            {% endif %}
        </div>
    </main>

{% endblock %}
{% block customJS%}
    <script>
        //=========== FUNCTIONS =============
        let changeInputPrice = (value)=>{
            let priceInput = document.querySelector('#price');
            if(value === ''){
                priceInput.value = '';
            }else{
                priceInput.value = Math.round(value*100)/100;
            }
        }
        let changeInputQuantity = (value)=>{
            let quantityInput = document.querySelector('#quantity');
            if(value === ''){
                quantityInput.value = '';
            }else{
                quantityInput.value = value;
            }
        }

        window.onload = ()=>{
            // ============== ELEMENTS DU DOM ============
            let hidden = document.querySelector('#hidden');
            let deleteButton = document.querySelector('.btn-main');
            let errorQuantity = document.querySelector(".error-quantity");
            let errorSelect = document.querySelector(".error-select");
            let errorValue = document.querySelector(".error-value");
            let actualQuantity = document.querySelector('#actual-quantity');
            let actualValue = document.querySelector('#actual-value');
            let priceInput = document.querySelector('#price');
            let cryptoSelect = document.querySelector('#crypto');
            let quantityInput = document.querySelector('#quantity');


            //=============== INIT =================
            priceInput.value = '';
            cryptoSelect.selectedIndex = 0;
            quantityInput.value = '';
            let cryptoValue = '';


            // ============ EVENTS =================

                // Contrôle l'événement de changement sur la crypto selectionnée
            cryptoSelect.addEventListener('change',(e)=>{
                hidden.value = "";
                errorQuantity.innerText = '' ;
                errorSelect.innerText = '' ;
                errorValue.innerText = '';
                actualQuantity.innerText = '';
                actualValue.innerText = '';
                quantityInput.value = '';
                priceInput.value = '';
                if( cryptoSelect.value !== ''){
                    let unitPrice = parseFloat(document.querySelector('#'+ cryptoSelect.value).dataset['price']);
                    let totalQuantity = parseFloat(document.querySelector('#'+ cryptoSelect.value).dataset['quantity']);
                    cryptoValue = unitPrice ;
                    actualQuantity.innerText =  totalQuantity.toString();
                    actualValue.innerText =  (unitPrice * totalQuantity).toString() + "€" ;
                    hidden.value = unitPrice ;
                }
            })

            // Contrôle l'événement de changement sur la quantité saisie
            quantityInput.addEventListener('input',()=>{

                if(cryptoSelect.value === ''){
                    quantityInput.value='';
                    return
                }
                let message = "";
                if( (quantityInput.value > parseFloat(actualQuantity.innerText)) ||  isNaN(quantityInput.value) ){
                    if(quantityInput.value > parseFloat(actualQuantity.innerText)){
                        message = "La quantité ne peut dépasser le stock"
                    }else{
                        message = "La quantité doit être un chiffre valide"
                    }
                    deleteButton.disabled = true;
                }else{
                    message = "";
                    deleteButton.disabled = false;
                }
                errorQuantity.innerText = message;

                if (quantityInput.value !== ''){
                    changeInputPrice(quantityInput.value * cryptoValue);
                }else{
                    changeInputPrice("");
                }

            })

            // Contrôle l'événement de changement sur la valeur saisie
            priceInput.addEventListener('input',(e)=>{
                if(cryptoSelect.value === ''){
                    priceInput.value='';
                    return
                }
                let message = "";
                if( (priceInput.value > parseFloat(actualValue.innerText)) ||  isNaN(priceInput.value) ){
                    if(priceInput.value > parseFloat(actualValue.innerText)){
                        message = "La quantité ne peut dépasser le stock"
                    }else{
                        message = "La quantité doit être un chiffre valide"
                    }
                    deleteButton.disabled = true;
                }else{
                    message = "";
                    deleteButton.disabled = false;
                }
                errorValue.innerText = message;

                if (e.target.value !== ''){
                    changeInputQuantity(e.target.value / cryptoValue);

                }else{
                    changeInputQuantity('');
                }
            })
        }
    </script>
{% endblock %}